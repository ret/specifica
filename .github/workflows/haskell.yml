# Haskell stack project Github Actions template
# https://gist.github.com/mstksg/11f753d891cee5980326a8ea8c865233
#
# To use, mainly change the list in 'plans' and modify 'include' for
# any OS package manager deps.
#
# Currently not working for cabal-install >= 3
#
# Based on https://raw.githubusercontent.com/commercialhaskell/stack/stable/doc/travis-complex.yml
#
# TODO:
# * cache (https://github.com/actions/cache)
#     but this is too small. native cacheing will come soon
#     https://github.community/t5/GitHub-Actions/Caching-files-between-GitHub-Action-executions/m-p/30974/highlight/true#M630
#     so we can wait for then.
# * support for cabal-install >= 3

name: Haskell Stack Project CI

# 7am every day of the week
on:
  push:
  schedule:
  - cron: "0 7 * * */1"
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        # use this to specify what resolvers and ghc to use
        plan:
        - { build: stack, resolver: "--resolver lts-18.26"  }
        - { build: stack, resolver: "--resolver lts-19.11"  }
        - { build: stack, resolver: "--resolver nightly"  }
        # use this to include any dependencies from OS package managers
        include: []
        # - os: macOS-latest
        #   brew: anybrewdeps
        # - os: ubuntu-latest
        #   apt-get: happy libblas-dev liblapack-dev

        exclude:
        - os: macOS-latest
          plan:
            build: cabal

    runs-on: ${{ matrix.os }}
    steps:
    - name: Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
        brew: ${{ matrix.brew }}
    - uses: actions/checkout@v1

    - name: Setup stack
      uses: mstksg/setup-stack@v2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Install dependencies
      run: |
        set -ex
        stack --no-terminal --install-ghc $ARGS build --only-dependencies
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Build
      run: |
        set -ex
        stack --no-terminal $ARGS build
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Test
      run: |
        set -ex
        stack --no-terminal $ARGS test
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
